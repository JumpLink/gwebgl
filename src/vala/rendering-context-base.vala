
namespace Gwebgl {

public int sum(int a, int b) {
    return(a + b);
}

public class RenderingContextBase: Object {
    GLib.HashTable<string, int> constants;

    /* Constructor */
    public RenderingContextBase() {
        constants = new HashTable<string, int> (str_hash, str_equal);

        constants.insert("ACTIVE_ATTRIBUTES", GL.GL_ACTIVE_ATTRIBUTES);
        constants.insert("ACTIVE_TEXTURE", GL.GL_ACTIVE_TEXTURE);
        constants.insert("ACTIVE_UNIFORMS", GL.GL_ACTIVE_UNIFORMS);
        constants.insert("ALIASED_LINE_WIDTH_RANGE", GL.GL_ALIASED_LINE_WIDTH_RANGE);
        constants.insert("ALIASED_POINT_SIZE_RANGE", GL.GL_ALIASED_POINT_SIZE_RANGE);
        constants.insert("ALPHA", GL.GL_ALPHA);
        constants.insert("ALPHA_BITS", GL.GL_ALPHA_BITS);
        constants.insert("ALWAYS", GL.GL_ALWAYS);
        constants.insert("ARRAY_BUFFER", GL.GL_ARRAY_BUFFER);
        constants.insert("ARRAY_BUFFER_BINDING", GL.GL_ARRAY_BUFFER_BINDING);
        constants.insert("ATTACHED_SHADERS", GL.GL_ATTACHED_SHADERS);
        constants.insert("BACK", GL.GL_BACK);
        constants.insert("BLEND", GL.GL_BLEND);
        constants.insert("BLEND_COLOR", GL.GL_BLEND_COLOR);
        constants.insert("BLEND_DST_ALPHA", GL.GL_BLEND_DST_ALPHA);
        constants.insert("BLEND_DST_RGB", GL.GL_BLEND_DST_RGB);
        constants.insert("BLEND_EQUATION", GL.GL_BLEND_EQUATION);
        constants.insert("BLEND_EQUATION_ALPHA", GL.GL_BLEND_EQUATION_ALPHA);
        constants.insert("BLEND_EQUATION_RGB", GL.GL_BLEND_EQUATION_RGB);
        constants.insert("BLEND_SRC_ALPHA", GL.GL_BLEND_SRC_ALPHA);
        constants.insert("BLEND_SRC_RGB", GL.GL_BLEND_SRC_RGB);
        constants.insert("BLUE_BITS", GL.GL_BLUE_BITS);
        constants.insert("BOOL", GL.GL_BOOL);
        constants.insert("BOOL_VEC2", GL.GL_BOOL_VEC2);
        constants.insert("BOOL_VEC3", GL.GL_BOOL_VEC3);
        constants.insert("BOOL_VEC4", GL.GL_BOOL_VEC4);
        constants.insert("BUFFER_SIZE", GL.GL_BUFFER_SIZE);
        constants.insert("BUFFER_USAGE", GL.GL_BUFFER_USAGE);
        constants.insert("BYTE", GL.GL_BYTE);
        constants.insert("CCW", GL.GL_CCW);
        constants.insert("CLAMP_TO_EDGE", GL.GL_CLAMP_TO_EDGE);
        constants.insert("COLOR_ATTACHMENT0", GL.GL_COLOR_ATTACHMENT0);
        constants.insert("COLOR_BUFFER_BIT", GL.GL_COLOR_BUFFER_BIT);
        constants.insert("COLOR_CLEAR_VALUE", GL.GL_COLOR_CLEAR_VALUE);
        constants.insert("COLOR_WRITEMASK", GL.GL_COLOR_WRITEMASK);
        constants.insert("COMPILE_STATUS", GL.GL_COMPILE_STATUS);
        constants.insert("COMPRESSED_TEXTURE_FORMATS", GL.GL_COMPRESSED_TEXTURE_FORMATS);
        constants.insert("CONSTANT_ALPHA", GL.GL_CONSTANT_ALPHA);
        constants.insert("CONSTANT_COLOR", GL.GL_CONSTANT_COLOR);
        constants.insert("CULL_FACE", GL.GL_CULL_FACE);
        constants.insert("CULL_FACE_MODE", GL.GL_CULL_FACE_MODE);
        constants.insert("CURRENT_PROGRAM", GL.GL_CURRENT_PROGRAM);
        constants.insert("CURRENT_VERTEX_ATTRIB", GL.GL_CURRENT_VERTEX_ATTRIB);
        constants.insert("CW", GL.GL_CW);
        constants.insert("DECR", GL.GL_DECR);
        constants.insert("DECR_WRAP", GL.GL_DECR_WRAP);
        constants.insert("DELETE_STATUS", GL.GL_DELETE_STATUS);
        constants.insert("DEPTH_ATTACHMENT", GL.GL_DEPTH_ATTACHMENT);
        constants.insert("DEPTH_BITS", GL.GL_DEPTH_BITS);
        constants.insert("DEPTH_BUFFER_BIT", GL.GL_DEPTH_BUFFER_BIT);
        constants.insert("DEPTH_CLEAR_VALUE", GL.GL_DEPTH_CLEAR_VALUE);
        constants.insert("DEPTH_COMPONENT", GL.GL_DEPTH_COMPONENT);
        constants.insert("DEPTH_COMPONENT16", GL.GL_DEPTH_COMPONENT16);
        constants.insert("DEPTH_FUNC", GL.GL_DEPTH_FUNC);
        constants.insert("DEPTH_RANGE", GL.GL_DEPTH_RANGE);
        constants.insert("DEPTH_TEST", GL.GL_DEPTH_TEST);
        constants.insert("DEPTH_WRITEMASK", GL.GL_DEPTH_WRITEMASK);
        constants.insert("DITHER", GL.GL_DITHER);
        constants.insert("DONT_CARE", GL.GL_DONT_CARE);
        constants.insert("DST_ALPHA", GL.GL_DST_ALPHA);
        constants.insert("DST_COLOR", GL.GL_DST_COLOR);
        constants.insert("DYNAMIC_DRAW", GL.GL_DYNAMIC_DRAW);
        constants.insert("ELEMENT_ARRAY_BUFFER", GL.GL_ELEMENT_ARRAY_BUFFER);
        constants.insert("ELEMENT_ARRAY_BUFFER_BINDING", GL.GL_ELEMENT_ARRAY_BUFFER_BINDING);
        constants.insert("EQUAL", GL.GL_EQUAL);
        constants.insert("FASTEST", GL.GL_FASTEST);
        constants.insert("FLOAT", GL.GL_FLOAT);
        constants.insert("FLOAT_MAT2", GL.GL_FLOAT_MAT2);
        constants.insert("FLOAT_MAT3", GL.GL_FLOAT_MAT3);
        constants.insert("FLOAT_MAT4", GL.GL_FLOAT_MAT4);
        constants.insert("FLOAT_VEC2", GL.GL_FLOAT_VEC2);
        constants.insert("FLOAT_VEC3", GL.GL_FLOAT_VEC3);
        constants.insert("FLOAT_VEC4", GL.GL_FLOAT_VEC4);
        constants.insert("FRAGMENT_SHADER", GL.GL_FRAGMENT_SHADER);
        constants.insert("FRAMEBUFFER", GL.GL_FRAMEBUFFER);
        constants.insert("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", GL.GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME);
        constants.insert("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", GL.GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE);
        constants.insert("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", GL.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE);
        constants.insert("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", GL.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL);
        constants.insert("FRAMEBUFFER_BINDING", GL.GL_FRAMEBUFFER_BINDING);
        constants.insert("FRAMEBUFFER_COMPLETE", GL.GL_FRAMEBUFFER_COMPLETE);
        constants.insert("FRAMEBUFFER_INCOMPLETE_ATTACHMENT", GL.GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT);
        constants.insert("FRAMEBUFFER_INCOMPLETE_DIMENSIONS", GL.GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES);
        constants.insert("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", GL.GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT);
        constants.insert("FRAMEBUFFER_UNSUPPORTED", GL.GL_FRAMEBUFFER_UNSUPPORTED);
        constants.insert("FRONT", GL.GL_FRONT);
        constants.insert("FRONT_AND_BACK", GL.GL_FRONT_AND_BACK);
        constants.insert("FRONT_FACE", GL.GL_FRONT_FACE);
        constants.insert("FUNC_ADD", GL.GL_FUNC_ADD);
        constants.insert("FUNC_REVERSE_SUBTRACT", GL.GL_FUNC_REVERSE_SUBTRACT);
        constants.insert("FUNC_SUBTRACT", GL.GL_FUNC_SUBTRACT);
        constants.insert("GENERATE_MIPMAP_HINT", GL.GL_GENERATE_MIPMAP_HINT);
        constants.insert("GEQUAL", GL.GL_GEQUAL);
        constants.insert("GREATER", GL.GL_GREATER);
        constants.insert("GREEN_BITS", GL.GL_GREEN_BITS);
        constants.insert("HIGH_FLOAT", GL.GL_HIGH_FLOAT);
        constants.insert("HIGH_INT", GL.GL_HIGH_INT);
        constants.insert("IMPLEMENTATION_COLOR_READ_FORMAT", GL.GL_IMPLEMENTATION_COLOR_READ_FORMAT);
        constants.insert("IMPLEMENTATION_COLOR_READ_TYPE", GL.GL_IMPLEMENTATION_COLOR_READ_TYPE);
        constants.insert("INCR", GL.GL_INCR);
        constants.insert("INCR_WRAP", GL.GL_INCR_WRAP);
        constants.insert("INT", GL.GL_INT);
        constants.insert("INT_VEC2", GL.GL_INT_VEC2);
        constants.insert("INT_VEC3", GL.GL_INT_VEC3);
        constants.insert("INT_VEC4", GL.GL_INT_VEC4);
        constants.insert("INVALID_ENUM", GL.GL_INVALID_ENUM);
        constants.insert("INVALID_FRAMEBUFFER_OPERATION", GL.GL_INVALID_FRAMEBUFFER_OPERATION);
        constants.insert("INVALID_OPERATION", GL.GL_INVALID_OPERATION);
        constants.insert("INVALID_VALUE", GL.GL_INVALID_VALUE);
        constants.insert("INVERT", GL.GL_INVERT);
        constants.insert("KEEP", GL.GL_KEEP);
        constants.insert("LEQUAL", GL.GL_LEQUAL);
        constants.insert("LESS", GL.GL_LESS);
        constants.insert("LINEAR", GL.GL_LINEAR);
        constants.insert("LINEAR_MIPMAP_LINEAR", GL.GL_LINEAR_MIPMAP_LINEAR);
        constants.insert("LINEAR_MIPMAP_NEAREST", GL.GL_LINEAR_MIPMAP_NEAREST);
        constants.insert("LINES", GL.GL_LINES);
        constants.insert("LINE_LOOP", GL.GL_LINE_LOOP);
        constants.insert("LINE_STRIP", GL.GL_LINE_STRIP);
        constants.insert("LINE_WIDTH", GL.GL_LINE_WIDTH);
        constants.insert("LINK_STATUS", GL.GL_LINK_STATUS);
        constants.insert("LOW_FLOAT", GL.GL_LOW_FLOAT);
        constants.insert("LOW_INT", GL.GL_LOW_INT);
        constants.insert("LUMINANCE", GL.GL_LUMINANCE);
        constants.insert("LUMINANCE_ALPHA", GL.GL_LUMINANCE_ALPHA);
        constants.insert("MAX_COMBINED_TEXTURE_IMAGE_UNITS", GL.GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS);
        constants.insert("MAX_CUBE_MAP_TEXTURE_SIZE", GL.GL_MAX_CUBE_MAP_TEXTURE_SIZE);
        constants.insert("MAX_FRAGMENT_UNIFORM_VECTORS", GL.GL_MAX_FRAGMENT_UNIFORM_VECTORS);
        constants.insert("MAX_RENDERBUFFER_SIZE", GL.GL_MAX_RENDERBUFFER_SIZE);
        constants.insert("MAX_TEXTURE_IMAGE_UNITS", GL.GL_MAX_TEXTURE_IMAGE_UNITS);
        constants.insert("MAX_TEXTURE_SIZE", GL.GL_MAX_TEXTURE_SIZE);
        constants.insert("MAX_VARYING_VECTORS", GL.GL_MAX_VARYING_VECTORS);
        constants.insert("MAX_VERTEX_ATTRIBS", GL.GL_MAX_VERTEX_ATTRIBS);
        constants.insert("MAX_VERTEX_TEXTURE_IMAGE_UNITS", GL.GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS);
        constants.insert("MAX_VERTEX_UNIFORM_VECTORS", GL.GL_MAX_VERTEX_UNIFORM_VECTORS);
        constants.insert("MAX_VIEWPORT_DIMS", GL.GL_MAX_VIEWPORT_DIMS);
        constants.insert("MEDIUM_FLOAT", GL.GL_MEDIUM_FLOAT);
        constants.insert("MEDIUM_INT", GL.GL_MEDIUM_INT);
        constants.insert("MIRRORED_REPEAT", GL.GL_MIRRORED_REPEAT);
        constants.insert("NEAREST", GL.GL_NEAREST);
        constants.insert("NEAREST_MIPMAP_LINEAR", GL.GL_NEAREST_MIPMAP_LINEAR);
        constants.insert("NEAREST_MIPMAP_NEAREST", GL.GL_NEAREST_MIPMAP_NEAREST);
        constants.insert("NEVER", GL.GL_NEVER);
        constants.insert("NICEST", GL.GL_NICEST);
        constants.insert("NONE", GL.GL_NONE);
        constants.insert("NOTEQUAL", GL.GL_NOTEQUAL);
        constants.insert("NO_ERROR", GL.GL_NO_ERROR);
        constants.insert("ONE", GL.GL_ONE);
        constants.insert("ONE_MINUS_CONSTANT_ALPHA", GL.GL_ONE_MINUS_CONSTANT_ALPHA);
        constants.insert("ONE_MINUS_CONSTANT_COLOR", GL.GL_ONE_MINUS_CONSTANT_COLOR);
        constants.insert("ONE_MINUS_DST_ALPHA", GL.GL_ONE_MINUS_DST_ALPHA);
        constants.insert("ONE_MINUS_DST_COLOR", GL.GL_ONE_MINUS_DST_COLOR);
        constants.insert("ONE_MINUS_SRC_ALPHA", GL.GL_ONE_MINUS_SRC_ALPHA);
        constants.insert("ONE_MINUS_SRC_COLOR", GL.GL_ONE_MINUS_SRC_COLOR);
        constants.insert("OUT_OF_MEMORY", GL.GL_OUT_OF_MEMORY);
        constants.insert("PACK_ALIGNMENT", GL.GL_PACK_ALIGNMENT);
        constants.insert("POINTS", GL.GL_POINTS);
        constants.insert("POLYGON_OFFSET_FACTOR", GL.GL_POLYGON_OFFSET_FACTOR);
        constants.insert("POLYGON_OFFSET_FILL", GL.GL_POLYGON_OFFSET_FILL);
        constants.insert("POLYGON_OFFSET_UNITS", GL.GL_POLYGON_OFFSET_UNITS);
        constants.insert("RED_BITS", GL.GL_RED_BITS);
        constants.insert("RENDERBUFFER", GL.GL_RENDERBUFFER);
        constants.insert("RENDERBUFFER_ALPHA_SIZE", GL.GL_RENDERBUFFER_ALPHA_SIZE);
        constants.insert("RENDERBUFFER_BINDING", GL.GL_RENDERBUFFER_BINDING);
        constants.insert("RENDERBUFFER_BLUE_SIZE", GL.GL_RENDERBUFFER_BLUE_SIZE);
        constants.insert("RENDERBUFFER_DEPTH_SIZE", GL.GL_RENDERBUFFER_DEPTH_SIZE);
        constants.insert("RENDERBUFFER_GREEN_SIZE", GL.GL_RENDERBUFFER_GREEN_SIZE);
        constants.insert("RENDERBUFFER_HEIGHT", GL.GL_RENDERBUFFER_HEIGHT);
        constants.insert("RENDERBUFFER_INTERNAL_FORMAT", GL.GL_RENDERBUFFER_INTERNAL_FORMAT);
        constants.insert("RENDERBUFFER_RED_SIZE", GL.GL_RENDERBUFFER_RED_SIZE);
        constants.insert("RENDERBUFFER_STENCIL_SIZE", GL.GL_RENDERBUFFER_STENCIL_SIZE);
        constants.insert("RENDERBUFFER_WIDTH", GL.GL_RENDERBUFFER_WIDTH);
        constants.insert("RENDERER", GL.GL_RENDERER);
        constants.insert("REPEAT", GL.GL_REPEAT);
        constants.insert("REPLACE", GL.GL_REPLACE);
        constants.insert("RGB", GL.GL_RGB);
        constants.insert("RGB565", GL.GL_RGB565);
        constants.insert("RGB5_A1", GL.GL_RGB5_A1);
        constants.insert("RGBA", GL.GL_RGBA);
        constants.insert("RGBA4", GL.GL_RGBA4);
        constants.insert("SAMPLER_2D", GL.GL_SAMPLER_2D);
        constants.insert("SAMPLER_CUBE", GL.GL_SAMPLER_CUBE);
        constants.insert("SAMPLES", GL.GL_SAMPLES);
        constants.insert("SAMPLE_ALPHA_TO_COVERAGE", GL.GL_SAMPLE_ALPHA_TO_COVERAGE);
        constants.insert("SAMPLE_BUFFERS", GL.GL_SAMPLE_BUFFERS);
        constants.insert("SAMPLE_COVERAGE", GL.GL_SAMPLE_COVERAGE);
        constants.insert("SAMPLE_COVERAGE_INVERT", GL.GL_SAMPLE_COVERAGE_INVERT);
        constants.insert("SAMPLE_COVERAGE_VALUE", GL.GL_SAMPLE_COVERAGE_VALUE);
        constants.insert("SCISSOR_BOX", GL.GL_SCISSOR_BOX);
        constants.insert("SCISSOR_TEST", GL.GL_SCISSOR_TEST);
        constants.insert("SHADER_TYPE", GL.GL_SHADER_TYPE);
        constants.insert("SHADING_LANGUAGE_VERSION", GL.GL_SHADING_LANGUAGE_VERSION);
        constants.insert("SHORT", GL.GL_SHORT);
        constants.insert("SRC_ALPHA", GL.GL_SRC_ALPHA);
        constants.insert("SRC_ALPHA_SATURATE", GL.GL_SRC_ALPHA_SATURATE);
        constants.insert("SRC_COLOR", GL.GL_SRC_COLOR);
        constants.insert("STATIC_DRAW", GL.GL_STATIC_DRAW);
        constants.insert("STENCIL_ATTACHMENT", GL.GL_STENCIL_ATTACHMENT);
        constants.insert("STENCIL_BACK_FAIL", GL.GL_STENCIL_BACK_FAIL);
        constants.insert("STENCIL_BACK_FUNC", GL.GL_STENCIL_BACK_FUNC);
        constants.insert("STENCIL_BACK_PASS_DEPTH_FAIL", GL.GL_STENCIL_BACK_PASS_DEPTH_FAIL);
        constants.insert("STENCIL_BACK_PASS_DEPTH_PASS", GL.GL_STENCIL_BACK_PASS_DEPTH_PASS);
        constants.insert("STENCIL_BACK_REF", GL.GL_STENCIL_BACK_REF);
        constants.insert("STENCIL_BACK_VALUE_MASK", GL.GL_STENCIL_BACK_VALUE_MASK);
        constants.insert("STENCIL_BACK_WRITEMASK", GL.GL_STENCIL_BACK_WRITEMASK);
        constants.insert("STENCIL_BITS", GL.GL_STENCIL_BITS);
        constants.insert("STENCIL_BUFFER_BIT", GL.GL_STENCIL_BUFFER_BIT);
        constants.insert("STENCIL_CLEAR_VALUE", GL.GL_STENCIL_CLEAR_VALUE);
        constants.insert("STENCIL_FAIL", GL.GL_STENCIL_FAIL);
        constants.insert("STENCIL_FUNC", GL.GL_STENCIL_FUNC);
        constants.insert("STENCIL_INDEX8", GL.GL_STENCIL_INDEX8);
        constants.insert("STENCIL_PASS_DEPTH_FAIL", GL.GL_STENCIL_PASS_DEPTH_FAIL);
        constants.insert("STENCIL_PASS_DEPTH_PASS", GL.GL_STENCIL_PASS_DEPTH_PASS);
        constants.insert("STENCIL_REF", GL.GL_STENCIL_REF);
        constants.insert("STENCIL_TEST", GL.GL_STENCIL_TEST);
        constants.insert("STENCIL_VALUE_MASK", GL.GL_STENCIL_VALUE_MASK);
        constants.insert("STENCIL_WRITEMASK", GL.GL_STENCIL_WRITEMASK);
        constants.insert("STREAM_DRAW", GL.GL_STREAM_DRAW);
        constants.insert("SUBPIXEL_BITS", GL.GL_SUBPIXEL_BITS);
        constants.insert("TEXTURE", GL.GL_TEXTURE);
        constants.insert("TEXTURE0", GL.GL_TEXTURE0);
        constants.insert("TEXTURE1", GL.GL_TEXTURE1);
        constants.insert("TEXTURE10", GL.GL_TEXTURE10);
        constants.insert("TEXTURE11", GL.GL_TEXTURE11);
        constants.insert("TEXTURE12", GL.GL_TEXTURE12);
        constants.insert("TEXTURE13", GL.GL_TEXTURE13);
        constants.insert("TEXTURE14", GL.GL_TEXTURE14);
        constants.insert("TEXTURE15", GL.GL_TEXTURE15);
        constants.insert("TEXTURE16", GL.GL_TEXTURE16);
        constants.insert("TEXTURE17", GL.GL_TEXTURE17);
        constants.insert("TEXTURE18", GL.GL_TEXTURE18);
        constants.insert("TEXTURE19", GL.GL_TEXTURE19);
        constants.insert("TEXTURE2", GL.GL_TEXTURE2);
        constants.insert("TEXTURE20", GL.GL_TEXTURE20);
        constants.insert("TEXTURE21", GL.GL_TEXTURE21);
        constants.insert("TEXTURE22", GL.GL_TEXTURE22);
        constants.insert("TEXTURE23", GL.GL_TEXTURE23);
        constants.insert("TEXTURE24", GL.GL_TEXTURE24);
        constants.insert("TEXTURE25", GL.GL_TEXTURE25);
        constants.insert("TEXTURE26", GL.GL_TEXTURE26);
        constants.insert("TEXTURE27", GL.GL_TEXTURE27);
        constants.insert("TEXTURE28", GL.GL_TEXTURE28);
        constants.insert("TEXTURE29", GL.GL_TEXTURE29);
        constants.insert("TEXTURE3", GL.GL_TEXTURE3);
        constants.insert("TEXTURE30", GL.GL_TEXTURE30);
        constants.insert("TEXTURE31", GL.GL_TEXTURE31);
        constants.insert("TEXTURE4", GL.GL_TEXTURE4);
        constants.insert("TEXTURE5", GL.GL_TEXTURE5);
        constants.insert("TEXTURE6", GL.GL_TEXTURE6);
        constants.insert("TEXTURE7", GL.GL_TEXTURE7);
        constants.insert("TEXTURE8", GL.GL_TEXTURE8);
        constants.insert("TEXTURE9", GL.GL_TEXTURE9);
        constants.insert("TEXTURE_2D", GL.GL_TEXTURE_2D);
        constants.insert("TEXTURE_BINDING_2D", GL.GL_TEXTURE_BINDING_2D);
        constants.insert("TEXTURE_BINDING_CUBE_MAP", GL.GL_TEXTURE_BINDING_CUBE_MAP);
        constants.insert("TEXTURE_CUBE_MAP", GL.GL_TEXTURE_CUBE_MAP);
        constants.insert("TEXTURE_CUBE_MAP_NEGATIVE_X", GL.GL_TEXTURE_CUBE_MAP_NEGATIVE_X);
        constants.insert("TEXTURE_CUBE_MAP_NEGATIVE_Y", GL.GL_TEXTURE_CUBE_MAP_NEGATIVE_Y);
        constants.insert("TEXTURE_CUBE_MAP_NEGATIVE_Z", GL.GL_TEXTURE_CUBE_MAP_NEGATIVE_Z);
        constants.insert("TEXTURE_CUBE_MAP_POSITIVE_X", GL.GL_TEXTURE_CUBE_MAP_POSITIVE_X);
        constants.insert("TEXTURE_CUBE_MAP_POSITIVE_Y", GL.GL_TEXTURE_CUBE_MAP_POSITIVE_Y);
        constants.insert("TEXTURE_CUBE_MAP_POSITIVE_Z", GL.GL_TEXTURE_CUBE_MAP_POSITIVE_Z);
        constants.insert("TEXTURE_MAG_FILTER", GL.GL_TEXTURE_MAG_FILTER);
        constants.insert("TEXTURE_MIN_FILTER", GL.GL_TEXTURE_MIN_FILTER);
        constants.insert("TEXTURE_WRAP_S", GL.GL_TEXTURE_WRAP_S);
        constants.insert("TEXTURE_WRAP_T", GL.GL_TEXTURE_WRAP_T);
        constants.insert("TRIANGLES", GL.GL_TRIANGLES);
        constants.insert("TRIANGLE_FAN", GL.GL_TRIANGLE_FAN);
        constants.insert("TRIANGLE_STRIP", GL.GL_TRIANGLE_STRIP);
        constants.insert("UNPACK_ALIGNMENT", GL.GL_UNPACK_ALIGNMENT);
        constants.insert("UNSIGNED_BYTE", GL.GL_UNSIGNED_BYTE);
        constants.insert("UNSIGNED_INT", GL.GL_UNSIGNED_INT);
        constants.insert("UNSIGNED_SHORT", GL.GL_UNSIGNED_SHORT);
        constants.insert("UNSIGNED_SHORT_4_4_4_4", GL.GL_UNSIGNED_SHORT_4_4_4_4);
        constants.insert("UNSIGNED_SHORT_5_5_5_1", GL.GL_UNSIGNED_SHORT_5_5_5_1);
        constants.insert("UNSIGNED_SHORT_5_6_5", GL.GL_UNSIGNED_SHORT_5_6_5);
        constants.insert("VALIDATE_STATUS", GL.GL_VALIDATE_STATUS);
        constants.insert("VENDOR", GL.GL_VENDOR);
        constants.insert("VERSION", GL.GL_VERSION);
        constants.insert("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", GL.GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING);
        constants.insert("VERTEX_ATTRIB_ARRAY_ENABLED", GL.GL_VERTEX_ATTRIB_ARRAY_ENABLED);
        constants.insert("VERTEX_ATTRIB_ARRAY_NORMALIZED", GL.GL_VERTEX_ATTRIB_ARRAY_NORMALIZED);
        constants.insert("VERTEX_ATTRIB_ARRAY_POINTER", GL.GL_VERTEX_ATTRIB_ARRAY_POINTER);
        constants.insert("VERTEX_ATTRIB_ARRAY_SIZE", GL.GL_VERTEX_ATTRIB_ARRAY_SIZE);
        constants.insert("VERTEX_ATTRIB_ARRAY_STRIDE", GL.GL_VERTEX_ATTRIB_ARRAY_STRIDE);
        constants.insert("VERTEX_ATTRIB_ARRAY_TYPE", GL.GL_VERTEX_ATTRIB_ARRAY_TYPE);
        constants.insert("VERTEX_SHADER", GL.GL_VERTEX_SHADER);
        constants.insert("VIEWPORT", GL.GL_VIEWPORT);
        constants.insert("ZERO", GL.GL_ZERO);
    }

    public GLib.HashTable<string, int> get_webgl_constants()  {
        return this.constants;
    }

    public void activeTexture(GL.GLenum texture) {
        GL.glActiveTexture(texture);
    }
}
}